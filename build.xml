<?xml version="1.0" encoding="UTF-8"?>  
<project name="Gisv2" default="deploy" basedir=".">
    <property environment="env" />
    <property name="webapp.name" value="Gisv2" />
    <property name="catalina.home" value="D:\labenv\tomcat\apache-tomcat-7.0.81" />
    <property name="dist.dir" value="${basedir}/dist" />
    <property name="webRoot.dir" value="${basedir}/WebRoot" />
    <property name="src.dir" value="${basedir}/src" />
    <property name="config.dir" value="${basedir}/src/META-INF" />
    <property name="lib.dir" value="${webRoot.dir}/WEB-INF/lib" />
    <property name="build.dir" value="${basedir}/build" />
    <property name="build.class" value="${build.dir}/classes" />
    <property name="build.config" value="${build.dir}/META-INF" />
    <property name="app.jar" value="${webapp.name}.jar" />
    <property name="obf.jar" value="${webapp.name}_obf.jar" />
    <property name="shrinklog" value="${webapp.name}_shrinklog.xml" />
    <property name="renamelog" value="${webapp.name}_renamelog.xml" />
		
    <!-- 使用eclipse jdt进行编译，而不使用JDK编译    
    <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />  
    -->
    	
    <!-- 初始化classpath -->  
    <path id="project.classpath">  
        <fileset dir="${lib.dir}">  
            <include name="**/*.jar" />  
        </fileset>  
        <!-- 添加tomcat类路径 -->  
        <fileset dir="${catalina.home}/lib">  
            <include name="*.jar" />  
        </fileset>   
    </path>  
  
    <!-- get the source compile classpath in a printable form -->  
    <pathconvert pathsep="${line.separator}|   |-- "  
             property="echo.path.compile"  
             refid="project.classpath">  
    </pathconvert>  
      
    <!-- show classpath jars -->  
    <target name="print_classpath">  
        <echo message="|-- compile classpath"/>  
        <echo message="|   |"/>  
        <echo message="|   |-- ${echo.path.compile}"/>  
    </target>  
      
    <!-- 删除之前的目录结构 -->  
    <target name="clear" description="清理旧文件">  
        <echo message="删除目录" />    
        <delete dir="${build.dir}" />  
        <delete dir="${dist.dir}" />   
        <delete file="${catalina.home}/webapps/${webapp.name}.war" />  
        <delete dir="${catalina.home}/webapps/${webapp.name}" />  
    </target>  
  
    <!-- 创建目录结构 -->  
    <target name="init" depends="clear" description="创建初始化目录结构">  
        <mkdir dir="${build.dir}/classes" />  
        <mkdir dir="${dist.dir}" />  
    </target>  
  
    <!-- 编译java -->  
    <target name="compile" depends="init" description="编译java文件">  
        <echo message="begin compile..." />  
        <javac srcdir="${src.dir}" destdir="${build.dir}/classes"   
            includeantruntime="false" nowarn="on"   
            source="1.7" target="1.7" deprecation="true" debug="true"
            encoding="UTF-8" classpathref="project.classpath"   
            >  
            <compilerarg line="-Xlint:unchecked" />  
            <!-- <classpath refid="project.classpath" /> -->  
        </javac>  
        <copy todir="${build.dir}">  
            <fileset dir="${src.dir}">  
                <include name="**/*.xml" />  
                <include name="**/*.properties" />  
                <include name="**/*.sql" />  
            </fileset>  
        </copy>  
        <echo message="end compile..." />  
    </target>

    <!-- 将class文件打成 jar包 -->
    <target name="pack" depends="compile">
        <jar jarfile="${build.dir}/${webapp.name}.jar">
            <fileset dir="${build.dir}/classes">
                <include name="**/*.class" />
            </fileset>

            <fileset dir="${src.dir}">
                <include name="**/*.xml" />
                <include name="**/*.properties" />
                <include name="**/*.sql" />
            </fileset>
        </jar>
        <echo message="end pack..." />
    </target>

    <!-- 混淆任务-->
    <target depends="pack" name="yguard">
        <taskdef name="yguard" classname="com.yworks.yguard.YGuardTask" classpath="yguard.jar" />
        <!-- the following can be adjusted to your needs -->
        <yguard>
            <inoutpair in="${build.dir}/${app.jar}" out="${build.dir}/${obf.jar}" />
            <externalclasses>
                <fileset dir="${lib.dir}">
                    <include name="**/*.jar" />
                </fileset>
                <fileset dir="${catalina.home}/lib">
                    <include name="*.jar" />
                </fileset>
            </externalclasses>

            <rename logfile="${build.dir}/${renamelog}">
                <keep>
                    <class classes="private" methods="private" fields="private">
                        <patternset>
                            <include name="action.*" />
                            <include name="dao.daoimpl.*" />
                            <include name="service.serviceimpl.*" />
                            <include name="model.*" />
                        </patternset>
                    </class>
                </keep>
            </rename>
        </yguard>
    </target>

    <!-- 打成war包, 名称默认为 项目名    -->
    <target name="war" depends="yguard" description="将工程打成war包">
        <echo message="begin war..." />
        <war destfile="${dist.dir}/${webapp.name}.war" basedir="${webRoot.dir}" webxml="${webRoot.dir}/WEB-INF/web.xml">
            <lib dir="${lib.dir}" />
            <!-- <classes dir="${build.dir}/classes" />  -->
            <fileset dir="${webRoot.dir}">
                <include name="***.*" />
            </fileset>
        </war>
        <echo message="end war..." />
    </target>

    <!-- copy war包 tomcat的deploy目录    -->
    <target name="deploy" depends="war" description="部署项目">
        <echo message="begin deploy..." />
        <copy file="${dist.dir}/${webapp.name}.war" todir="${catalina.home}/webapps" />
        <echo message="end deploy..." />
    </target>
</project>  